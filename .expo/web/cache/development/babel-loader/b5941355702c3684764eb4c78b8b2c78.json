{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport firebase from \"./src/connection\";\nimport { Input } from 'react-native-elements/dist/input/Input';\nexport default function Sugestão(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"null\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sugestão = _useState4[0],\n      setSugestão = _useState4[1];\n\n  var emailVazio = false;\n  var sugestãoVazia = false;\n\n  if (email === \"\" || email === null) {\n    emailVazio = true;\n  }\n\n  if (sugestão === \"\" || sugestão === null) {\n    sugestãoVazia = true;\n  }\n\n  var sugest = function sugest() {\n    var database = firebase.database();\n\n    if (!emailVazio && !sugestãoVazia) {\n      var newClienteKey = database.ref().child('Cadastros').push().key;\n      database.ref('Cadastro/' + newClienteKey + '/email').set(email);\n      database.ref('Cadastro/' + newClienteKey + '/sugestao').set(sugestão);\n    } else {\n      alert('Deixe seu e-mail e uma sugestão!');\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.menuStyle\n  }, React.createElement(Button, {\n    title: \"Home\",\n    onPress: function onPress() {\n      navigation.navigate(\"Netflix\");\n    },\n    buttonStyle: styles.button1Style\n  }), React.createElement(Button, {\n    title: \"Skins\",\n    onPress: function onPress() {\n      navigation.navigate(\"Skins\");\n    },\n    buttonStyle: styles.button1Style\n  }), React.createElement(Button, {\n    title: \"Friends\",\n    onPress: function onPress() {\n      navigation.navigate(\"Friends1\");\n    },\n    buttonStyle: styles.button1Style\n  })), React.createElement(View, {\n    style: styles.titulo\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"DEIXE AQUI SUA SUGEST\\xC3O! Aceitamos cr\\xEDticas, mas tamb\\xE9m n\\xE3o ficamos caladas!\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: 'white',\n    fontSize: 50,\n    alignItems: 'center'\n  },\n  menuStyle: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: '#000',\n    gap: '.5rem',\n    padding: '1rem'\n  },\n  button1Style: {\n    backgroundColor: 'red',\n    height: 50,\n    width: 220,\n    margin: 50,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/alici/OneDrive/Imagens/Documentos/SENAI 2020-21/Mobile/ProjetoMobile/Sugestões.js"],"names":["StatusBar","React","useState","useEffect","firebase","Input","Sugestão","navigation","email","setEmail","sugestão","setSugestão","emailVazio","sugestãoVazia","sugest","database","newClienteKey","ref","child","push","key","set","alert","styles","container","menuStyle","navigate","button1Style","titulo","text","StyleSheet","create","flex","alignItems","justifyContent","color","fontSize","display","flexDirection","backgroundColor","gap","padding","height","width","margin","textAlign"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport firebase from './src/connection';\r\nimport {Input} from 'react-native-elements/dist/input/Input';\r\n\r\nexport default function Sugestão({navigation}) {\r\n  const [email,setEmail] = useState(\"\");\r\n  const [sugestão, setSugestão] = useState(\"null\");\r\n\r\n  let emailVazio = false;\r\n  let sugestãoVazia = false;\r\n\r\n  if(email===\"\"||email=== null){\r\n       emailVazio = true;\r\n      }\r\n\r\n  if(sugestão===\"\"||sugestão === null){\r\n        sugestãoVazia = true;\r\n      }\r\n\r\n      const sugest = () => {\r\n        const database = firebase.database();\r\n        if(!emailVazio && !sugestãoVazia)\r\n        {\r\n          let newClienteKey = database.ref().child('Cadastros').push().key;\r\n          database.ref('Cadastro/' +newClienteKey+'/email').set(email);\r\n          database.ref('Cadastro/' +newClienteKey+'/sugestao').set(sugestão);\r\n        }\r\n\r\n        else{\r\n          alert('Deixe seu e-mail e uma sugestão!')\r\n        }\r\n\r\n      }\r\n      return(\r\n        <View style={styles.container}>\r\n          <View style={styles.menuStyle}>\r\n          <Button title =\"Home\" onPress={()=>\r\n          {navigation.navigate(\"Netflix\")}} buttonStyle={styles.button1Style}>\r\n          </Button>\r\n          <Button title =\"Skins\" onPress={()=>\r\n          {navigation.navigate(\"Skins\")}} buttonStyle={styles.button1Style}>\r\n          </Button>\r\n          <Button title =\"Friends\" onPress={()=>\r\n          {navigation.navigate(\"Friends1\")}} buttonStyle={styles.button1Style}>\r\n          </Button>\r\n          </View>\r\n\r\n          <View style={styles.titulo}>\r\n            <Text style={styles.text}>\r\n              DEIXE AQUI SUA SUGESTÃO!\r\n              \r\n              Aceitamos críticas, mas também não ficamos caladas!\r\n            </Text>\r\n          </View>\r\n\r\n        </View>\r\n      );\r\n\r\n    }\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    // backgroundColor: 'black',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  text: {\r\n    color: 'white',\r\n    fontSize: 50,\r\n    alignItems:'center'\r\n  },\r\n  menuStyle:{\r\n    display:'flex',\r\n    flexDirection: 'row',\r\n    backgroundColor:'#000',\r\n    gap:'.5rem',\r\n    padding:'1rem'\r\n  },\r\n  button1Style:{\r\n    backgroundColor: 'red',  \r\n    height: 50,\r\n    width: 220,\r\n    margin: 50, \r\n    textAlign: 'center',\r\n},\r\n\r\n\r\n});"]},"metadata":{},"sourceType":"module"}